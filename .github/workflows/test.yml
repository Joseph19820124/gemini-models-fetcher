name: Test Gemini Models Fetcher

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test imports
      run: |
        python -c "from gemini_models_fetcher import GeminiModelsFetcher; print('Import successful')"
    
    - name: Test basic functionality (without API key)
      run: |
        python -c "
        from gemini_models_fetcher import GeminiModelsFetcher
        fetcher = GeminiModelsFetcher()
        # Test model filtering with sample data
        sample_models = [
            {'name': 'models/gemini-2.5-pro', 'description': 'Test model'},
            {'name': 'models/gemini-1.5-flash', 'description': 'Test model'},
            {'name': 'models/text-embedding-004', 'description': 'Test model'}
        ]
        latest = fetcher.filter_latest_models(sample_models)
        print(f'Filtered {len(latest)} latest models from {len(sample_models)} total')
        assert len(latest) == 2, 'Should filter 2 Gemini models'
        print('Basic functionality test passed')
        "
    
    - name: Check code formatting
      run: |
        python -m py_compile gemini_models_fetcher.py
        python -m py_compile examples/basic_usage.py
        python -m py_compile examples/advanced_usage.py